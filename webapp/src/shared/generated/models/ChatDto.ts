/* tslint:disable */
/* eslint-disable */
/**
 * transcendence-app
 * The transcendence-app API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChatDto
 */
export interface ChatDto {
    /**
     * 
     * @type {string}
     * @memberof ChatDto
     */
    chatName: string;
    /**
     * 
     * @type {string}
     * @memberof ChatDto
     */
    password: string | null;
    /**
     * 
     * @type {string}
     * @memberof ChatDto
     */
    avatarId: string | null;
    /**
     * 
     * @type {string}
     * @memberof ChatDto
     */
    owner: string;
}

/**
 * Check if a given object implements the ChatDto interface.
 */
export function instanceOfChatDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "chatName" in value;
    isInstance = isInstance && "password" in value;
    isInstance = isInstance && "avatarId" in value;
    isInstance = isInstance && "owner" in value;

    return isInstance;
}

export function ChatDtoFromJSON(json: any): ChatDto {
    return ChatDtoFromJSONTyped(json, false);
}

export function ChatDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chatName': json['chatName'],
        'password': json['password'],
        'avatarId': json['avatarId'],
        'owner': json['owner'],
    };
}

export function ChatDtoToJSON(value?: ChatDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chatName': value.chatName,
        'password': value.password,
        'avatarId': value.avatarId,
        'owner': value.owner,
    };
}

